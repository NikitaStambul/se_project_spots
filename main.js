!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitBtnSelector:".modal__btn",errorSelector:".modal__error",inputTypeErrorClass:"modal__input_type_error",errorActiveClass:"modal__error_active",inactiveSubmitBtnClass:"modal__btn_inactive"};function t(e,t,r){Array.from(e).some((e=>!e.validity.valid))?o(t,r):function(e,t){e.classList.remove(t.inactiveSubmitBtnClass),e.disabled=!1}(t,r)}function r(e,t){const r=e.parentElement.querySelector(t.errorSelector);e.classList.remove(t.inputTypeErrorClass),r.classList.remove(t.errorActiveClass)}function o(e,t){e.classList.add(t.inactiveSubmitBtnClass),e.disabled=!0}function n(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";e.textContent=t?o:r}let a,s;const c=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return this._customFetch(`${this._baseUrl}/cards`,{headers:this._headers})}getUserInfo(){return this._customFetch(`${this._baseUrl}/users/me`,{headers:this._headers})}addPost(e){let{name:t,link:r}=e;return this._customFetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){return this._customFetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}changeLikeStatus(e,t){return this._customFetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this._customFetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editUserAvatar(e){return this._customFetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}_customFetch(e,t){return fetch(e,t).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"4775fc00-e1d6-4cc2-859b-b095cced12a0","Content-Type":"application/json"}}),i=document.querySelector(".profile__avatar"),l=document.querySelector("#edit-profile-modal"),d=document.querySelector("#edit-avatar-modal"),u=document.querySelector(".profile__avatar"),m=document.querySelector(".profile__avatar-btn"),_=document.querySelector(".profile__name"),h=document.querySelector(".profile__description"),v=l.querySelector("#profile-name-input"),p=l.querySelector("#profile-description-input"),f=document.querySelector(".profile__edit-btn"),y=document.forms["edit-profile"],b=document.forms["edit-avatar"];m.addEventListener("click",(()=>D(d))),b.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter,{avatar:r}=e.target.elements;n(t,!1),c.editUserAvatar(r.value).then((e=>{u.src=e.avatar,T(d)})).catch((e=>console.error(e))).finally((()=>n(t,!0)))})),f.addEventListener("click",(()=>{[v,p].forEach((t=>r(t,e))),v.value=_.textContent,p.value=h.textContent,D(l)})),y.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter,{name:r,about:o}=e.target.elements;n(t,!1),c.editUserInfo({name:r.value,about:o.value}).then((e=>{_.textContent=e.name,h.textContent=e.about,T(l)})).catch((e=>console.error(e))).finally((()=>n(t,!0)))}));const S=document.querySelector("#new-post-modal"),E=document.querySelector(".profile__add-btn"),q=document.forms["new-post"],L=q.querySelector(".modal__btn");E.addEventListener("click",(()=>D(S))),q.addEventListener("submit",(function(t){t.preventDefault();const r=t.submitter,{name:a,link:s}=t.target.elements;n(r,!0,"Add post","Adding post..."),c.addPost({name:a.value,link:s.value}).then((e=>{const t=F(e);x.prepend(t),T(S)})).catch((e=>console.error(e))).finally((()=>n(saveBtnEl,!1,"Add post","Adding post..."))),t.target.reset(),o(L,e)}));const g=document.querySelector("#delete-post-modal");document.forms["delete-post"].addEventListener("submit",(function(e){const t=e.submitter;e.preventDefault(),n(t,!0,"Delete","Deleting..."),c.deleteCard(s).then((()=>{a.remove(),T(g)})).catch((e=>console.error(e))).finally((()=>n(t,!1,"Delete","Deleting...")))}));const k=document.querySelector("#preview-modal"),C=k.querySelector(".modal__image"),A=k.querySelector(".modal__caption"),U=document.querySelectorAll(".modal"),x=document.querySelector(".cards__list");function D(e){document.addEventListener("keydown",$),e.classList.add("modal_opened")}function T(e){document.removeEventListener("keydown",$),e.classList.remove("modal_opened")}function $(e){"Escape"===e.key&&document.querySelectorAll(".modal_opened").forEach(T)}function F(e){const{_id:t,link:r,name:o,isLiked:n}=e,i=document.querySelector("#card-template").content.querySelector(".card").cloneNode(!0),l=i.querySelector(".card__title"),d=i.querySelector(".card__image"),u=i.querySelector(".card__like-btn"),m=i.querySelector(".card__delete-btn");return l.textContent=o,d.setAttribute("src",r),d.setAttribute("alt",o+" image"),n&&u.classList.add("card__like-btn_is-liked"),u.addEventListener("click",(()=>{const e=u.classList.contains("card__like-btn_is-liked");c.changeLikeStatus(t,e).then((()=>u.classList.toggle("card__like-btn_is-liked"))).catch((e=>console.error(e)))})),m.addEventListener("click",(()=>{a=i,s=t,D(g)})),d.addEventListener("click",(()=>{C.setAttribute("src",r),C.setAttribute("alt",o+" image"),A.textContent=o,D(k)})),i}var I;I=e,document.querySelectorAll(I.formSelector).forEach((e=>{!function(e,o){const n=e.querySelectorAll(o.inputSelector),a=e.querySelector(o.submitBtnSelector);t(n,a,o),n.forEach((e=>{e.addEventListener("input",(()=>{!function(e,t){e.validity.valid?r(e,t):function(e,t){const r=e.parentElement.querySelector(t.errorSelector);e.classList.add(t.inputTypeErrorClass),r.textContent=e.validationMessage,r.classList.add(t.errorActiveClass)}(e,t)}(e,o),t(n,a,o)}))}))}(e,I)})),document.querySelectorAll(".modal__close-btn").forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(()=>T(t)))})),U.forEach((e=>{e.addEventListener("click",(e=>{e.target.classList.contains("modal_opened")&&T(e.target)}))})),c.getAppInfo().then((e=>{let[t,r]=e;t.forEach((e=>{const t=F(e);x.append(t)})),_.textContent=r.name,h.textContent=r.about,i.src=r.avatar})).catch(console.error)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,